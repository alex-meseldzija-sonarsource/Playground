trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreCLI@2
  displayName: 'Restore solution'
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'select'

#- pwsh: |
#      dotnet ./scanner/SonarScanner.MSBuild.dll begin /o:"alexmeseldzija" /k:"alexmeseldzija_alex-test" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="21d941b2f90bc284309dfed9bc1fa611bd39feed" /d:sonar.verbose=true
#  workingDirectory: '$(Build.SourcesDirectory)'
#  displayName: 'run scanner prep'

- task: SonarCloudPrepare@3
  inputs:
    SonarCloud: 'Alex SonarCloud Token'
    organization: 'alexmeseldzija'
    scannerMode: 'MSBuild'
    projectKey: 'alexmeseldzija_alex-test'

#- pwsh: |
#      chmod -R +x ./scanner/sonar-scanner-5.0.1.3006/bin/*
#  workingDirectory: '$(Build.SourcesDirectory)'
#  displayName: 'chmod perms'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '**/*.sln'

#- pwsh: |
#    dotnet ./scanner/SonarScanner.MSBuild.dll end /d:sonar.token="21d941b2f90bc284309dfed9bc1fa611bd39feed"  
#  workingDirectory: '$(Build.SourcesDirectory)'
#  displayName: 'run scanner endstep'

- task: SonarCloudAnalyze@3
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'